<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet" targetNamespace="http://tempuri.org/DataSet.xsd" xmlns:mstns="http://tempuri.org/DataSet.xsd" xmlns="http://tempuri.org/DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="gameMarketConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="gameMarketConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.gameMarket.Properties.Settings.GlobalReference.Default.gameMarketConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="usersTableAdapter" GeneratorDataComponentClassName="usersTableAdapter" Name="users" UserDataComponentName="usersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[users] WHERE (([login] = @Original_login) AND ([password] = @Original_password) AND ([roleId] = @Original_roleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[users] ([login], [password], [roleId]) VALUES (@login, @password, @roleId);
SELECT login, password, roleId FROM users WHERE (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT login, password, roleId FROM dbo.users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[users] SET [login] = @login, [password] = @password, [roleId] = @roleId WHERE (([login] = @Original_login) AND ([password] = @Original_password) AND ([roleId] = @Original_roleId));
SELECT login, password, roleId FROM users WHERE (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_password" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="login" DataSetColumn="login" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="roleId" DataSetColumn="roleId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ExistUser" Modifier="Public" Name="ExistUser" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="ExistUser">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(*)
FROM            users
WHERE        (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill_GetUser" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetData_User" GeneratorSourceName="Fill_GetUser" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="Fill_GetUser">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        login, password, roleId
FROM            users
WHERE        (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="User_Delete" Modifier="Public" Name="User_Delete" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="User_Delete">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM users
WHERE        (login = @Deletelogin)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Deletelogin" ColumnName="login" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@Deletelogin" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="User_Insert" Modifier="Public" Name="User_Insert" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="User_Insert">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[users] ([login], [password], [roleId]) VALUES (@login, @password, @roleId);
SELECT login, password, roleId FROM users WHERE (login = @login)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="login" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="password" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(16)" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="16" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="roleId" DataSourceName="gameMarket.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="User_Update" Modifier="Public" Name="User_Update" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="User_Update">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       users
SET                password = @password, roleId = @roleId
WHERE        (login = @Find_login); </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="password" ColumnName="password" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(16)" DbType="AnsiString" Direction="Input" ParameterName="@password" Precision="0" ProviderType="VarChar" Scale="0" Size="16" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="roleId" ColumnName="roleId" DataSourceName="gameMarket.dbo.users" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@roleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="roleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Find_login" ColumnName="login" DataSourceName="gameMarket.dbo.users" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@Find_login" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="game-placemarkTableAdapter" GeneratorDataComponentClassName="game_placemarkTableAdapter" Name="game-placemark" UserDataComponentName="game-placemarkTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.[game-placemark]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[game-placemark] WHERE (([id] = @Original_id) AND ([gameId] = @Original_gameId) AND ([placemarkId] = @Original_placemarkId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[game-placemark] ([gameId], [placemarkId]) VALUES (@gameId, @placemarkId);
SELECT id, gameId, placemarkId FROM [game-placemark] WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, gameId, placemarkId FROM dbo.[game-placemark]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[game-placemark] SET [gameId] = @gameId, [placemarkId] = @placemarkId WHERE (([id] = @Original_id) AND ([gameId] = @Original_gameId) AND ([placemarkId] = @Original_placemarkId));
SELECT id, gameId, placemarkId FROM [game-placemark] WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="gameId" DataSetColumn="gameId" />
              <Mapping SourceColumn="placemarkId" DataSetColumn="placemarkId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="Delete_Placemark" Modifier="Public" Name="Delete_Placemark" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Delete_Placemark">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM [game-placemark]
WHERE        (gameId = @gameId) AND (placemarkId = @placemarkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameId" ColumnName="gameId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="placemarkId" ColumnName="placemarkId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="Exist_User_Placemark" Modifier="Public" Name="Exist_User_Placemark" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="Exist_User_Placemark">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(*) AS Expr1
FROM            [game-placemark]
WHERE        (gameId = @gameId) AND (placemarkId = @placemarkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameId" ColumnName="gameId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="placemarkId" ColumnName="placemarkId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="Insert_Placemark" Modifier="Public" Name="Insert_Placemark" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="Insert_Placemark">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [game-placemark]
                         (gameId, placemarkId)
VALUES        (@gameId,@placemarkId); 
SELECT id, gameId, placemarkId FROM [game-placemark] WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameId" ColumnName="gameId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="placemarkId" ColumnName="placemarkId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="gamesTableAdapter" GeneratorDataComponentClassName="gamesTableAdapter" Name="games" UserDataComponentName="gamesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.games" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [games] WHERE (([id] = @Original_id) AND ([gameStudioId] = @Original_gameStudioId) AND ([name] = @Original_name) AND ((@IsNull_serverId = 1 AND [serverId] IS NULL) OR ([serverId] = @Original_serverId)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameStudioId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameStudioId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_serverId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="serverId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_serverId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="serverId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [games] ([gameStudioId], [name], [serverId], [Price]) VALUES (@gameStudioId, @name, @serverId, @Price);
SELECT id, gameStudioId, name, serverId, Price FROM games WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameStudioId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameStudioId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@serverId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="serverId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        id, gameStudioId, name, serverId, Price
FROM            games</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [games] SET [gameStudioId] = @gameStudioId, [name] = @name, [serverId] = @serverId, [Price] = @Price WHERE (([id] = @Original_id) AND ([gameStudioId] = @Original_gameStudioId) AND ([name] = @Original_name) AND ((@IsNull_serverId = 1 AND [serverId] IS NULL) OR ([serverId] = @Original_serverId)) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)));
SELECT id, gameStudioId, name, serverId, Price FROM games WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameStudioId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameStudioId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@serverId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="serverId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameStudioId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameStudioId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_serverId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="serverId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_serverId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="serverId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="gameMarket.dbo.games" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="gameStudioId" DataSetColumn="gameStudioId" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="serverId" DataSetColumn="serverId" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.games" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill_WithCondition" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy_WithCondition" GeneratorSourceName="Fill_WithCondition" GetMethodModifier="Public" GetMethodName="GetDataBy_WithCondition" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy_WithCondition" UserSourceName="Fill_WithCondition">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT games.Price, games.gameStudioId, games.id, games.name, games.serverId FROM games INNER JOIN [game-placemark] ON games.id = [game-placemark].gameId INNER JOIN [user-game] ON games.id = [user-game].gameId WHERE ([game-placemark].placemarkId = @placemarkId) AND ([user-game].userLogin = @userLogin) OR ([game-placemark].placemarkId = @placemarkId) AND (@allGames = 1) OR ([user-game].userLogin = @userLogin) AND (@allPlacemark = 1) OR (@allGames = 1) AND (@allPlacemark = 1)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="placemarkId" ColumnName="placemarkId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="userLogin" ColumnName="userLogin" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="allGames" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@allGames" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="allPlacemark" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="AnsiString" Direction="Input" ParameterName="@allPlacemark" Precision="0" Scale="0" Size="1024" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="Game_Delete" Modifier="Public" Name="Game_Delete" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Game_Delete">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM games
WHERE        (id =
                             (SELECT        id
                               FROM            games AS games_1
                               WHERE        (name = @Delete_name)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Delete_name" ColumnName="name" DataSourceName="gameMarket.dbo.games" DataTypeServer="nvarchar(40)" DbType="String" Direction="Input" ParameterName="@Delete_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="40" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="Game_Insert" Modifier="Public" Name="Game_Insert" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="Game_Insert">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO games
                         (gameStudioId, name, serverId, Price)
VALUES        (@gameStudioId,@name,@serverId,@price);   
SELECT id, gameStudioId, name, serverId FROM games WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameStudioId" ColumnName="gameStudioId" DataSourceName="gameMarket.dbo.games" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameStudioId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameStudioId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="name" DataSourceName="gameMarket.dbo.games" DataTypeServer="nvarchar(40)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="40" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="serverId" ColumnName="serverId" DataSourceName="gameMarket.dbo.games" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@serverId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="serverId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="price" ColumnName="Price" DataSourceName="gameMarket.dbo.games" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@price" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="Game_Update" Modifier="Public" Name="Game_Update" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="Game_Update">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE       games
SET                gameStudioId = @gameStudioId, name = @name, serverId = @serverId, Price = @Price
WHERE        (name = @Find_Name);  </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameStudioId" ColumnName="gameStudioId" DataSourceName="gameMarket.dbo.games" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameStudioId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameStudioId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="name" DataSourceName="gameMarket.dbo.games" DataTypeServer="nvarchar(40)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="40" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="serverId" ColumnName="serverId" DataSourceName="gameMarket.dbo.games" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@serverId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="serverId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Price" ColumnName="Price" DataSourceName="gameMarket.dbo.games" DataTypeServer="float" DbType="Double" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Float" Scale="0" Size="8" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Find_Name" ColumnName="name" DataSourceName="gameMarket.dbo.games" DataTypeServer="nvarchar(40)" DbType="String" Direction="Input" ParameterName="@Find_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="40" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.games" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetGameId" Modifier="Public" Name="GetGameId" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="GetGameId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        id
FROM            games
WHERE        (name = @name)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="name" ColumnName="name" DataSourceName="gameMarket.dbo.games" DataTypeServer="nvarchar(40)" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="40" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetLastId" Modifier="Public" Name="GetLastId" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="GetLastId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        MAX(id) AS Expr1
FROM            games</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="gameStudiosTableAdapter" GeneratorDataComponentClassName="gameStudiosTableAdapter" Name="gameStudios" UserDataComponentName="gameStudiosTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.gameStudios" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[gameStudios] WHERE (([id] = @Original_id) AND ([studioName] = @Original_studioName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studioName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studioName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[gameStudios] ([studioName]) VALUES (@studioName);
SELECT id, studioName FROM gameStudios WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studioName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studioName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, studioName FROM dbo.gameStudios</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[gameStudios] SET [studioName] = @studioName WHERE (([id] = @Original_id) AND ([studioName] = @Original_studioName));
SELECT id, studioName FROM gameStudios WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@studioName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studioName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_studioName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="studioName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="studioName" DataSetColumn="studioName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="placemarksTableAdapter" GeneratorDataComponentClassName="placemarksTableAdapter" Name="placemarks" UserDataComponentName="placemarksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.placemarks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[placemarks] WHERE (([id] = @Original_id) AND ([placemarker] = @Original_placemarker))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_placemarker" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="placemarker" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[placemarks] ([placemarker]) VALUES (@placemarker);
SELECT id, placemarker FROM placemarks WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@placemarker" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="placemarker" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, placemarker FROM dbo.placemarks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[placemarks] SET [placemarker] = @placemarker WHERE (([id] = @Original_id) AND ([placemarker] = @Original_placemarker));
SELECT id, placemarker FROM placemarks WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@placemarker" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="placemarker" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_placemarker" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="placemarker" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="placemarker" DataSetColumn="placemarker" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="rolesTableAdapter" GeneratorDataComponentClassName="rolesTableAdapter" Name="roles" UserDataComponentName="rolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.roles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[roles] WHERE (([id] = @Original_id) AND ([role] = @Original_role))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[roles] ([role]) VALUES (@role);
SELECT id, role FROM roles WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, role FROM dbo.roles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[roles] SET [role] = @role WHERE (([id] = @Original_id) AND ([role] = @Original_role));
SELECT id, role FROM roles WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="role" DataSetColumn="role" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="serversTableAdapter" GeneratorDataComponentClassName="serversTableAdapter" Name="servers" UserDataComponentName="serversTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.servers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[servers] WHERE (([id] = @Original_id) AND ([location] = @Original_location) AND ([satus] = @Original_satus) AND ([information] = @Original_information))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_satus" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="satus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="information" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[servers] ([location], [satus], [information]) VALUES (@location, @satus, @information);
SELECT id, location, satus, information FROM servers WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@satus" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="satus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="information" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, location, satus, information FROM dbo.servers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[servers] SET [location] = @location, [satus] = @satus, [information] = @information WHERE (([id] = @Original_id) AND ([location] = @Original_location) AND ([satus] = @Original_satus) AND ([information] = @Original_information));
SELECT id, location, satus, information FROM servers WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@satus" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="satus" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="information" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_location" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="location" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@Original_satus" Precision="0" ProviderType="Binary" Scale="0" Size="0" SourceColumn="satus" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_information" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="information" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="location" DataSetColumn="location" />
              <Mapping SourceColumn="satus" DataSetColumn="satus" />
              <Mapping SourceColumn="information" DataSetColumn="information" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="user-gameTableAdapter" GeneratorDataComponentClassName="user_gameTableAdapter" Name="user-game" UserDataComponentName="user-gameTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.[user-game]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[user-game] WHERE (([id] = @Original_id) AND ([userLogin] = @Original_userLogin) AND ([gameId] = @Original_gameId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[user-game] ([userLogin], [gameId]) VALUES (@userLogin, @gameId);
SELECT id, userLogin, gameId FROM [user-game] WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, userLogin, gameId FROM dbo.[user-game]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[user-game] SET [userLogin] = @userLogin, [gameId] = @gameId WHERE (([id] = @Original_id) AND ([userLogin] = @Original_userLogin) AND ([gameId] = @Original_gameId));
SELECT id, userLogin, gameId FROM [user-game] WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="userLogin" DataSetColumn="userLogin" />
              <Mapping SourceColumn="gameId" DataSetColumn="gameId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="IsGameOwner" Modifier="Public" Name="IsGameOwner" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="IsGameOwner">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(*) AS Expr1
FROM            [user-game]
WHERE        (userLogin = @login) AND (gameId = @gameId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="login" ColumnName="userLogin" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@login" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="gameId" ColumnName="gameId" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="User_Game_Insert" Modifier="Public" Name="User_Game_Insert" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="User_Game_Insert">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [dbo].[user-game] ([userLogin], [gameId]) VALUES (@userLogin, @gameId);
SELECT id, userLogin, gameId FROM [user-game] WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="userLogin" ColumnName="userLogin" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@userLogin" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="gameId" ColumnName="gameId" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PicturesTableAdapter" GeneratorDataComponentClassName="PicturesTableAdapter" Name="Pictures" UserDataComponentName="PicturesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.Pictures" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Pictures] WHERE (([id] = @Original_id) AND ((@IsNull_gameId = 1 AND [gameId] IS NULL) OR ([gameId] = @Original_gameId)) AND ([pictureName] = @Original_pictureName) AND ((@IsNull_picFileName = 1 AND [picFileName] IS NULL) OR ([picFileName] = @Original_picFileName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pictureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pictureName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_picFileName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="picFileName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_picFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picFileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Pictures] ([gameId], [pictureName], [picFileName], [PictureData]) VALUES (@gameId, @pictureName, @picFileName, @PictureData);
SELECT id, gameId, pictureName, picFileName, PictureData FROM Pictures WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pictureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pictureName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@picFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picFileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@PictureData" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PictureData" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, gameId, pictureName, picFileName, PictureData FROM dbo.Pictures</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Pictures] SET [gameId] = @gameId, [pictureName] = @pictureName, [picFileName] = @picFileName, [PictureData] = @PictureData WHERE (([id] = @Original_id) AND ((@IsNull_gameId = 1 AND [gameId] IS NULL) OR ([gameId] = @Original_gameId)) AND ([pictureName] = @Original_pictureName) AND ((@IsNull_picFileName = 1 AND [picFileName] IS NULL) OR ([picFileName] = @Original_picFileName)));
SELECT id, gameId, pictureName, picFileName, PictureData FROM Pictures WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@pictureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pictureName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@picFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picFileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@PictureData" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="PictureData" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_gameId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_pictureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="pictureName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_picFileName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="picFileName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_picFileName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="picFileName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="gameMarket.dbo.Pictures" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="gameId" DataSetColumn="gameId" />
              <Mapping SourceColumn="pictureName" DataSetColumn="pictureName" />
              <Mapping SourceColumn="picFileName" DataSetColumn="picFileName" />
              <Mapping SourceColumn="PictureData" DataSetColumn="PictureData" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeletePicture" Modifier="Public" Name="DeletePicture" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeletePicture">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Pictures
FROM            Pictures INNER JOIN
                         games ON Pictures.gameId = games.id
WHERE        (games.name = @gameName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameName" ColumnName="name" DataSourceName="gameMarket.dbo.games" DataTypeServer="nvarchar(40)" DbType="String" Direction="Input" ParameterName="@gameName" Precision="0" ProviderType="NVarChar" Scale="0" Size="40" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="ExistPicture" Modifier="Public" Name="ExistPicture" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="ExistPicture">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(*) AS Expr1
FROM            Pictures
WHERE        (picFileName = @pictureName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="pictureName" ColumnName="picFileName" DataSourceName="gameMarket2.dbo.Pictures" DataTypeServer="nvarchar(100)" DbType="String" Direction="Input" ParameterName="@pictureName" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumn="picFileName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetPicture_Data" Modifier="Public" Name="GetPicture_Data" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="GetPicture_Data">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        COUNT(*) AS Expr1
FROM            Pictures
WHERE        (PictureData = @pictureData)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="pictureData" ColumnName="PictureData" DataSourceName="gameMarket2.dbo.Pictures" DataTypeServer="varbinary(MAX)" DbType="Binary" Direction="Input" ParameterName="@pictureData" Precision="0" ProviderType="VarBinary" Scale="0" Size="2147483647" SourceColumn="PictureData" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectName="gameMarket.dbo.usp_ImportImage" DbObjectType="StoredProcedure" GenerateShortCommands="true" GeneratorSourceName="usp_ImportImage" Modifier="Public" Name="usp_ImportImage" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="usp_ImportImage">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.usp_ImportImage</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameOwnerId" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@PicName" Precision="0" ProviderType="NVarChar" Scale="0" Size="100" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@ImageFolderPath" Precision="0" ProviderType="NVarChar" Scale="0" Size="1000" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="nvarchar" DbType="String" Direction="Input" ParameterName="@Filename" Precision="0" ProviderType="NVarChar" Scale="0" Size="1000" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ShopTableAdapter" GeneratorDataComponentClassName="ShopTableAdapter" Name="Shop" UserDataComponentName="ShopTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Pictures.PictureData, games.name, games.Price, gameStudios.studioName
FROM            games INNER JOIN
                         Pictures ON games.id = Pictures.gameId INNER JOIN
                         gameStudios ON games.gameStudioId = gameStudios.id
WHERE        (Pictures.pictureName = N'name')
GROUP BY Pictures.PictureData, games.name, games.Price, gameStudios.studioName</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PictureData" DataSetColumn="PictureData" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="studioName" DataSetColumn="studioName" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill_Placemark" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="Fill_Placemark" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Fill_Placemark">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Pictures.PictureData, games.name, games.Price, gameStudios.studioName
FROM            games INNER JOIN
                         Pictures ON games.id = Pictures.gameId INNER JOIN
                         gameStudios ON games.gameStudioId = gameStudios.id INNER JOIN
                         [game-placemark] ON games.id = [game-placemark].gameId
WHERE        (Pictures.pictureName = N'name')
GROUP BY Pictures.PictureData, games.name, games.Price, gameStudios.studioName, [game-placemark].placemarkId
HAVING        ([game-placemark].placemarkId = @placemarkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="placemarkId" ColumnName="placemarkId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LibraryTableAdapter" GeneratorDataComponentClassName="LibraryTableAdapter" Name="Library" UserDataComponentName="LibraryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Pictures.PictureData, games.name, gameStudios.studioName
FROM            games INNER JOIN
                         gameStudios ON games.gameStudioId = gameStudios.id INNER JOIN
                         Pictures ON games.id = Pictures.gameId INNER JOIN
                         [user-game] ON games.id = [user-game].gameId
WHERE        ([user-game].userLogin = @LoginOwner) AND (Pictures.pictureName = N'name')</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="LoginOwner" ColumnName="userLogin" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@LoginOwner" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PictureData" DataSetColumn="PictureData" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="studioName" DataSetColumn="studioName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill_Placemark" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="Fill_Placemark" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Fill_Placemark">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Pictures.PictureData, games.name, gameStudios.studioName
FROM            games INNER JOIN
                         gameStudios ON games.gameStudioId = gameStudios.id INNER JOIN
                         Pictures ON games.id = Pictures.gameId INNER JOIN
                         [user-game] ON games.id = [user-game].gameId INNER JOIN
                         [game-placemark] ON games.id = [game-placemark].gameId
WHERE        ([user-game].userLogin = @LoginOwner) AND (Pictures.pictureName = N'name') AND ([game-placemark].placemarkId = @placemarkId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="LoginOwner" ColumnName="userLogin" DataSourceName="gameMarket.dbo.[user-game]" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@LoginOwner" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="userLogin" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="placemarkId" ColumnName="placemarkId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@placemarkId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="placemarkId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserViewTableAdapter" GeneratorDataComponentClassName="UserViewTableAdapter" Name="UserView" UserDataComponentName="UserViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        users.login, users.password, roles.role
FROM            users INNER JOIN
                         roles ON users.roleId = roles.id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="login" DataSetColumn="login" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="role" DataSetColumn="role" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GamesViewTableAdapter" GeneratorDataComponentClassName="GamesViewTableAdapter" Name="GamesView" UserDataComponentName="GamesViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Pictures.PictureData, games.name, games.Price, gameStudios.studioName, servers.location
FROM            games INNER JOIN
                         gameStudios ON games.gameStudioId = gameStudios.id LEFT OUTER JOIN
                         Pictures ON games.id = Pictures.gameId LEFT OUTER JOIN
                         servers ON games.serverId = servers.id</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PictureData" DataSetColumn="PictureData" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
              <Mapping SourceColumn="studioName" DataSetColumn="studioName" />
              <Mapping SourceColumn="location" DataSetColumn="location" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlacemakrsViewTableAdapter" GeneratorDataComponentClassName="PlacemakrsViewTableAdapter" Name="PlacemakrsView" UserDataComponentName="PlacemakrsViewTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gameMarketConnectionString (Settings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        placemarks.placemarker, [game-placemark].placemarkId
FROM            [game-placemark] INNER JOIN
                         placemarks ON [game-placemark].placemarkId = placemarks.id
WHERE        ([game-placemark].gameId = @gameId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="gameId" ColumnName="gameId" DataSourceName="gameMarket.dbo.[game-placemark]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@gameId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="gameId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="placemarker" DataSetColumn="placemarker" />
              <Mapping SourceColumn="placemarkId" DataSetColumn="placemarkId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet" msprop:Generator_UserDSName="DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="users" msprop:Generator_TableClassName="usersDataTable" msprop:Generator_TableVarName="tableusers" msprop:Generator_TablePropName="users" msprop:Generator_RowDeletingName="usersRowDeleting" msprop:Generator_RowChangingName="usersRowChanging" msprop:Generator_RowEvHandlerName="usersRowChangeEventHandler" msprop:Generator_RowDeletedName="usersRowDeleted" msprop:Generator_UserTableName="users" msprop:Generator_RowChangedName="usersRowChanged" msprop:Generator_RowEvArgName="usersRowChangeEvent" msprop:Generator_RowClassName="usersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="login" msprop:Generator_ColumnVarNameInTable="columnlogin" msprop:Generator_ColumnPropNameInRow="login" msprop:Generator_ColumnPropNameInTable="loginColumn" msprop:Generator_UserColumnName="login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="16" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="roleId" msprop:Generator_ColumnVarNameInTable="columnroleId" msprop:Generator_ColumnPropNameInRow="roleId" msprop:Generator_ColumnPropNameInTable="roleIdColumn" msprop:Generator_UserColumnName="roleId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="game-placemark" msprop:Generator_TableClassName="_game_placemarkDataTable" msprop:Generator_TableVarName="_tablegame_placemark" msprop:Generator_TablePropName="_game_placemark" msprop:Generator_RowDeletingName="_game_placemarkRowDeleting" msprop:Generator_RowChangingName="_game_placemarkRowChanging" msprop:Generator_RowEvHandlerName="_game_placemarkRowChangeEventHandler" msprop:Generator_RowDeletedName="_game_placemarkRowDeleted" msprop:Generator_UserTableName="game-placemark" msprop:Generator_RowChangedName="_game_placemarkRowChanged" msprop:Generator_RowEvArgName="_game_placemarkRowChangeEvent" msprop:Generator_RowClassName="_game_placemarkRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="gameId" msprop:Generator_ColumnVarNameInTable="columngameId" msprop:Generator_ColumnPropNameInRow="gameId" msprop:Generator_ColumnPropNameInTable="gameIdColumn" msprop:Generator_UserColumnName="gameId" type="xs:int" />
              <xs:element name="placemarkId" msprop:Generator_ColumnVarNameInTable="columnplacemarkId" msprop:Generator_ColumnPropNameInRow="placemarkId" msprop:Generator_ColumnPropNameInTable="placemarkIdColumn" msprop:Generator_UserColumnName="placemarkId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="games" msprop:Generator_TableClassName="gamesDataTable" msprop:Generator_TableVarName="tablegames" msprop:Generator_TablePropName="games" msprop:Generator_RowDeletingName="gamesRowDeleting" msprop:Generator_RowChangingName="gamesRowChanging" msprop:Generator_RowEvHandlerName="gamesRowChangeEventHandler" msprop:Generator_RowDeletedName="gamesRowDeleted" msprop:Generator_UserTableName="games" msprop:Generator_RowChangedName="gamesRowChanged" msprop:Generator_RowEvArgName="gamesRowChangeEvent" msprop:Generator_RowClassName="gamesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="gameStudioId" msprop:Generator_ColumnVarNameInTable="columngameStudioId" msprop:Generator_ColumnPropNameInRow="gameStudioId" msprop:Generator_ColumnPropNameInTable="gameStudioIdColumn" msprop:Generator_UserColumnName="gameStudioId" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="serverId" msprop:Generator_ColumnVarNameInTable="columnserverId" msprop:Generator_ColumnPropNameInRow="serverId" msprop:Generator_ColumnPropNameInTable="serverIdColumn" msprop:Generator_UserColumnName="serverId" type="xs:int" minOccurs="0" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="gameStudios" msprop:Generator_TableClassName="gameStudiosDataTable" msprop:Generator_TableVarName="tablegameStudios" msprop:Generator_TablePropName="gameStudios" msprop:Generator_RowDeletingName="gameStudiosRowDeleting" msprop:Generator_RowChangingName="gameStudiosRowChanging" msprop:Generator_RowEvHandlerName="gameStudiosRowChangeEventHandler" msprop:Generator_RowDeletedName="gameStudiosRowDeleted" msprop:Generator_UserTableName="gameStudios" msprop:Generator_RowChangedName="gameStudiosRowChanged" msprop:Generator_RowEvArgName="gameStudiosRowChangeEvent" msprop:Generator_RowClassName="gameStudiosRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="studioName" msprop:Generator_ColumnVarNameInTable="columnstudioName" msprop:Generator_ColumnPropNameInRow="studioName" msprop:Generator_ColumnPropNameInTable="studioNameColumn" msprop:Generator_UserColumnName="studioName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="placemarks" msprop:Generator_TableClassName="placemarksDataTable" msprop:Generator_TableVarName="tableplacemarks" msprop:Generator_TablePropName="placemarks" msprop:Generator_RowDeletingName="placemarksRowDeleting" msprop:Generator_RowChangingName="placemarksRowChanging" msprop:Generator_RowEvHandlerName="placemarksRowChangeEventHandler" msprop:Generator_RowDeletedName="placemarksRowDeleted" msprop:Generator_UserTableName="placemarks" msprop:Generator_RowChangedName="placemarksRowChanged" msprop:Generator_RowEvArgName="placemarksRowChangeEvent" msprop:Generator_RowClassName="placemarksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="placemarker" msprop:Generator_ColumnVarNameInTable="columnplacemarker" msprop:Generator_ColumnPropNameInRow="placemarker" msprop:Generator_ColumnPropNameInTable="placemarkerColumn" msprop:Generator_UserColumnName="placemarker">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="roles" msprop:Generator_TableClassName="rolesDataTable" msprop:Generator_TableVarName="tableroles" msprop:Generator_TablePropName="roles" msprop:Generator_RowDeletingName="rolesRowDeleting" msprop:Generator_RowChangingName="rolesRowChanging" msprop:Generator_RowEvHandlerName="rolesRowChangeEventHandler" msprop:Generator_RowDeletedName="rolesRowDeleted" msprop:Generator_UserTableName="roles" msprop:Generator_RowChangedName="rolesRowChanged" msprop:Generator_RowEvArgName="rolesRowChangeEvent" msprop:Generator_RowClassName="rolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="role" msprop:Generator_ColumnVarNameInTable="columnrole" msprop:Generator_ColumnPropNameInRow="role" msprop:Generator_ColumnPropNameInTable="roleColumn" msprop:Generator_UserColumnName="role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="servers" msprop:Generator_TableClassName="serversDataTable" msprop:Generator_TableVarName="tableservers" msprop:Generator_TablePropName="servers" msprop:Generator_RowDeletingName="serversRowDeleting" msprop:Generator_RowChangingName="serversRowChanging" msprop:Generator_RowEvHandlerName="serversRowChangeEventHandler" msprop:Generator_RowDeletedName="serversRowDeleted" msprop:Generator_UserTableName="servers" msprop:Generator_RowChangedName="serversRowChanged" msprop:Generator_RowEvArgName="serversRowChangeEvent" msprop:Generator_RowClassName="serversRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="location" msprop:Generator_ColumnVarNameInTable="columnlocation" msprop:Generator_ColumnPropNameInRow="location" msprop:Generator_ColumnPropNameInTable="locationColumn" msprop:Generator_UserColumnName="location">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="satus" msprop:Generator_ColumnVarNameInTable="columnsatus" msprop:Generator_ColumnPropNameInRow="satus" msprop:Generator_ColumnPropNameInTable="satusColumn" msprop:Generator_UserColumnName="satus" type="xs:boolean" />
              <xs:element name="information" msprop:Generator_ColumnVarNameInTable="columninformation" msprop:Generator_ColumnPropNameInRow="information" msprop:Generator_ColumnPropNameInTable="informationColumn" msprop:Generator_UserColumnName="information">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="user-game" msprop:Generator_TableClassName="_user_gameDataTable" msprop:Generator_TableVarName="_tableuser_game" msprop:Generator_TablePropName="_user_game" msprop:Generator_RowDeletingName="_user_gameRowDeleting" msprop:Generator_RowChangingName="_user_gameRowChanging" msprop:Generator_RowEvHandlerName="_user_gameRowChangeEventHandler" msprop:Generator_RowDeletedName="_user_gameRowDeleted" msprop:Generator_UserTableName="user-game" msprop:Generator_RowChangedName="_user_gameRowChanged" msprop:Generator_RowEvArgName="_user_gameRowChangeEvent" msprop:Generator_RowClassName="_user_gameRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="userLogin" msprop:Generator_ColumnVarNameInTable="columnuserLogin" msprop:Generator_ColumnPropNameInRow="userLogin" msprop:Generator_ColumnPropNameInTable="userLoginColumn" msprop:Generator_UserColumnName="userLogin">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="gameId" msprop:Generator_ColumnVarNameInTable="columngameId" msprop:Generator_ColumnPropNameInRow="gameId" msprop:Generator_ColumnPropNameInTable="gameIdColumn" msprop:Generator_UserColumnName="gameId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Pictures" msprop:Generator_TableClassName="PicturesDataTable" msprop:Generator_TableVarName="tablePictures" msprop:Generator_RowChangedName="PicturesRowChanged" msprop:Generator_TablePropName="Pictures" msprop:Generator_RowDeletingName="PicturesRowDeleting" msprop:Generator_RowChangingName="PicturesRowChanging" msprop:Generator_RowEvHandlerName="PicturesRowChangeEventHandler" msprop:Generator_RowDeletedName="PicturesRowDeleted" msprop:Generator_RowClassName="PicturesRow" msprop:Generator_UserTableName="Pictures" msprop:Generator_RowEvArgName="PicturesRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="gameId" msprop:Generator_ColumnVarNameInTable="columngameId" msprop:Generator_ColumnPropNameInRow="gameId" msprop:Generator_ColumnPropNameInTable="gameIdColumn" msprop:Generator_UserColumnName="gameId" type="xs:int" minOccurs="0" />
              <xs:element name="pictureName" msprop:Generator_ColumnVarNameInTable="columnpictureName" msprop:Generator_ColumnPropNameInRow="pictureName" msprop:Generator_ColumnPropNameInTable="pictureNameColumn" msprop:Generator_UserColumnName="pictureName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="picFileName" msprop:Generator_ColumnVarNameInTable="columnpicFileName" msprop:Generator_ColumnPropNameInRow="picFileName" msprop:Generator_ColumnPropNameInTable="picFileNameColumn" msprop:Generator_UserColumnName="picFileName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PictureData" msprop:Generator_ColumnVarNameInTable="columnPictureData" msprop:Generator_ColumnPropNameInRow="PictureData" msprop:Generator_ColumnPropNameInTable="PictureDataColumn" msprop:Generator_UserColumnName="PictureData" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Shop" msprop:Generator_TableClassName="ShopDataTable" msprop:Generator_TableVarName="tableShop" msprop:Generator_RowChangedName="ShopRowChanged" msprop:Generator_TablePropName="Shop" msprop:Generator_RowDeletingName="ShopRowDeleting" msprop:Generator_RowChangingName="ShopRowChanging" msprop:Generator_RowEvHandlerName="ShopRowChangeEventHandler" msprop:Generator_RowDeletedName="ShopRowDeleted" msprop:Generator_RowClassName="ShopRow" msprop:Generator_UserTableName="Shop" msprop:Generator_RowEvArgName="ShopRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PictureData" msprop:Generator_ColumnVarNameInTable="columnPictureData" msprop:Generator_ColumnPropNameInRow="PictureData" msprop:Generator_ColumnPropNameInTable="PictureDataColumn" msprop:Generator_UserColumnName="PictureData" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studioName" msprop:Generator_ColumnVarNameInTable="columnstudioName" msprop:Generator_ColumnPropNameInRow="studioName" msprop:Generator_ColumnPropNameInTable="studioNameColumn" msprop:Generator_UserColumnName="studioName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Library" msprop:Generator_TableClassName="LibraryDataTable" msprop:Generator_TableVarName="tableLibrary" msprop:Generator_TablePropName="Library" msprop:Generator_RowDeletingName="LibraryRowDeleting" msprop:Generator_RowChangingName="LibraryRowChanging" msprop:Generator_RowEvHandlerName="LibraryRowChangeEventHandler" msprop:Generator_RowDeletedName="LibraryRowDeleted" msprop:Generator_UserTableName="Library" msprop:Generator_RowChangedName="LibraryRowChanged" msprop:Generator_RowEvArgName="LibraryRowChangeEvent" msprop:Generator_RowClassName="LibraryRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PictureData" msprop:Generator_ColumnVarNameInTable="columnPictureData" msprop:Generator_ColumnPropNameInRow="PictureData" msprop:Generator_ColumnPropNameInTable="PictureDataColumn" msprop:Generator_UserColumnName="PictureData" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="studioName" msprop:Generator_ColumnVarNameInTable="columnstudioName" msprop:Generator_ColumnPropNameInRow="studioName" msprop:Generator_ColumnPropNameInTable="studioNameColumn" msprop:Generator_UserColumnName="studioName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserView" msprop:Generator_TableClassName="UserViewDataTable" msprop:Generator_TableVarName="tableUserView" msprop:Generator_RowChangedName="UserViewRowChanged" msprop:Generator_TablePropName="UserView" msprop:Generator_RowDeletingName="UserViewRowDeleting" msprop:Generator_RowChangingName="UserViewRowChanging" msprop:Generator_RowEvHandlerName="UserViewRowChangeEventHandler" msprop:Generator_RowDeletedName="UserViewRowDeleted" msprop:Generator_RowClassName="UserViewRow" msprop:Generator_UserTableName="UserView" msprop:Generator_RowEvArgName="UserViewRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="login" msprop:Generator_ColumnVarNameInTable="columnlogin" msprop:Generator_ColumnPropNameInRow="login" msprop:Generator_ColumnPropNameInTable="loginColumn" msprop:Generator_UserColumnName="login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="16" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="role" msprop:Generator_ColumnVarNameInTable="columnrole" msprop:Generator_ColumnPropNameInRow="role" msprop:Generator_ColumnPropNameInTable="roleColumn" msprop:Generator_UserColumnName="role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="GamesView" msprop:Generator_TableClassName="GamesViewDataTable" msprop:Generator_TableVarName="tableGamesView" msprop:Generator_RowChangedName="GamesViewRowChanged" msprop:Generator_TablePropName="GamesView" msprop:Generator_RowDeletingName="GamesViewRowDeleting" msprop:Generator_RowChangingName="GamesViewRowChanging" msprop:Generator_RowEvHandlerName="GamesViewRowChangeEventHandler" msprop:Generator_RowDeletedName="GamesViewRowDeleted" msprop:Generator_RowClassName="GamesViewRow" msprop:Generator_UserTableName="GamesView" msprop:Generator_RowEvArgName="GamesViewRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PictureData" msprop:Generator_ColumnVarNameInTable="columnPictureData" msprop:Generator_ColumnPropNameInRow="PictureData" msprop:Generator_ColumnPropNameInTable="PictureDataColumn" msprop:Generator_UserColumnName="PictureData" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="name" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:double" />
              <xs:element name="studioName" msprop:Generator_ColumnVarNameInTable="columnstudioName" msprop:Generator_ColumnPropNameInRow="studioName" msprop:Generator_ColumnPropNameInTable="studioNameColumn" msprop:Generator_UserColumnName="studioName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="location" msprop:Generator_ColumnVarNameInTable="columnlocation" msprop:Generator_ColumnPropNameInRow="location" msprop:Generator_ColumnPropNameInTable="locationColumn" msprop:Generator_UserColumnName="location" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlacemakrsView" msprop:Generator_TableClassName="PlacemakrsViewDataTable" msprop:Generator_TableVarName="tablePlacemakrsView" msprop:Generator_TablePropName="PlacemakrsView" msprop:Generator_RowDeletingName="PlacemakrsViewRowDeleting" msprop:Generator_RowChangingName="PlacemakrsViewRowChanging" msprop:Generator_RowEvHandlerName="PlacemakrsViewRowChangeEventHandler" msprop:Generator_RowDeletedName="PlacemakrsViewRowDeleted" msprop:Generator_UserTableName="PlacemakrsView" msprop:Generator_RowChangedName="PlacemakrsViewRowChanged" msprop:Generator_RowEvArgName="PlacemakrsViewRowChangeEvent" msprop:Generator_RowClassName="PlacemakrsViewRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="placemarker" msprop:Generator_ColumnVarNameInTable="columnplacemarker" msprop:Generator_ColumnPropNameInRow="placemarker" msprop:Generator_ColumnPropNameInTable="placemarkerColumn" msprop:Generator_UserColumnName="placemarker">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="placemarkId" msprop:Generator_ColumnVarNameInTable="columnplacemarkId" msprop:Generator_ColumnPropNameInRow="placemarkId" msprop:Generator_ColumnPropNameInTable="placemarkIdColumn" msprop:Generator_UserColumnName="placemarkId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:users" />
      <xs:field xpath="mstns:login" />
    </xs:unique>
    <xs:unique name="game-placemark_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:game-placemark" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="games_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:games" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Constraint2">
      <xs:selector xpath=".//mstns:games" />
      <xs:field xpath="mstns:name" />
    </xs:unique>
    <xs:unique name="Constraint3">
      <xs:selector xpath=".//mstns:games" />
      <xs:field xpath="mstns:Price" />
    </xs:unique>
    <xs:unique name="gameStudios_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:gameStudios" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="placemarks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:placemarks" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="roles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:roles" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="servers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:servers" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="user-game_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:user-game" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Pictures_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Pictures" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Pictures_Constraint2" msdata:ConstraintName="Constraint2">
      <xs:selector xpath=".//mstns:Pictures" />
      <xs:field xpath="mstns:PictureData" />
    </xs:unique>
    <xs:unique name="UserView_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserView" />
      <xs:field xpath="mstns:login" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="users_role_FK" msdata:parent="roles" msdata:child="users" msdata:parentkey="id" msdata:childkey="roleId" msprop:Generator_UserChildTable="users" msprop:Generator_ChildPropName="GetusersRows" msprop:Generator_UserRelationName="users_role_FK" msprop:Generator_RelationVarName="relationusers_role_FK" msprop:Generator_UserParentTable="roles" msprop:Generator_ParentPropName="rolesRow" />
      <msdata:Relationship name="game-placemark_gameId_FK" msdata:parent="games" msdata:child="game-placemark" msdata:parentkey="id" msdata:childkey="gameId" msprop:Generator_UserChildTable="game-placemark" msprop:Generator_ChildPropName="_Getgame_placemarkRows" msprop:Generator_UserRelationName="game-placemark_gameId_FK" msprop:Generator_RelationVarName="_relationgame_placemark_gameId_FK" msprop:Generator_UserParentTable="games" msprop:Generator_ParentPropName="gamesRow" />
      <msdata:Relationship name="game-placemark_placemarkId_FK" msdata:parent="placemarks" msdata:child="game-placemark" msdata:parentkey="id" msdata:childkey="placemarkId" msprop:Generator_UserChildTable="game-placemark" msprop:Generator_ChildPropName="_Getgame_placemarkRows" msprop:Generator_UserRelationName="game-placemark_placemarkId_FK" msprop:Generator_RelationVarName="_relationgame_placemark_placemarkId_FK" msprop:Generator_UserParentTable="placemarks" msprop:Generator_ParentPropName="placemarksRow" />
      <msdata:Relationship name="games_gameStudioId_FK" msdata:parent="gameStudios" msdata:child="games" msdata:parentkey="id" msdata:childkey="gameStudioId" msprop:Generator_UserChildTable="games" msprop:Generator_ChildPropName="GetgamesRows" msprop:Generator_UserRelationName="games_gameStudioId_FK" msprop:Generator_RelationVarName="relationgames_gameStudioId_FK" msprop:Generator_UserParentTable="gameStudios" msprop:Generator_ParentPropName="gameStudiosRow" />
      <msdata:Relationship name="games_sererId_FK" msdata:parent="servers" msdata:child="games" msdata:parentkey="id" msdata:childkey="serverId" msprop:Generator_UserChildTable="games" msprop:Generator_ChildPropName="GetgamesRows" msprop:Generator_UserRelationName="games_sererId_FK" msprop:Generator_RelationVarName="relationgames_sererId_FK" msprop:Generator_UserParentTable="servers" msprop:Generator_ParentPropName="serversRow" />
      <msdata:Relationship name="user-game_gameId_FK" msdata:parent="games" msdata:child="user-game" msdata:parentkey="id" msdata:childkey="gameId" msprop:Generator_UserChildTable="user-game" msprop:Generator_ChildPropName="_Getuser_gameRows" msprop:Generator_UserRelationName="user-game_gameId_FK" msprop:Generator_ParentPropName="gamesRow" msprop:Generator_RelationVarName="_relationuser_game_gameId_FK" msprop:Generator_UserParentTable="games" />
      <msdata:Relationship name="user-game_userLogin_FK" msdata:parent="users" msdata:child="user-game" msdata:parentkey="login" msdata:childkey="userLogin" msprop:Generator_UserChildTable="user-game" msprop:Generator_ChildPropName="_Getuser_gameRows" msprop:Generator_UserRelationName="user-game_userLogin_FK" msprop:Generator_ParentPropName="usersRow" msprop:Generator_RelationVarName="_relationuser_game_userLogin_FK" msprop:Generator_UserParentTable="users" />
      <msdata:Relationship name="FK__Pictures__gameId__160F4887" msdata:parent="games" msdata:child="Pictures" msdata:parentkey="id" msdata:childkey="gameId" msprop:Generator_UserChildTable="Pictures" msprop:Generator_ChildPropName="GetPicturesRows" msprop:Generator_UserRelationName="FK__Pictures__gameId__160F4887" msprop:Generator_RelationVarName="relationFK__Pictures__gameId__160F4887" msprop:Generator_UserParentTable="games" msprop:Generator_ParentPropName="gamesRow" />
      <msdata:Relationship name="game-placemark_placemarkId_FK1" msdata:parent="placemarks" msdata:child="PlacemakrsView" msdata:parentkey="id" msdata:childkey="placemarkId" msprop:Generator_UserChildTable="PlacemakrsView" msprop:Generator_ChildPropName="GetPlacemakrsViewRows" msprop:Generator_UserRelationName="game-placemark_placemarkId_FK1" msprop:Generator_ParentPropName="placemarksRow" msprop:Generator_RelationVarName="_relationgame_placemark_placemarkId_FK1" msprop:Generator_UserParentTable="placemarks" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>